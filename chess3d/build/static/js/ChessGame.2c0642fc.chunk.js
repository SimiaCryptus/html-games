"use strict";(self.webpackChunkchess3d=self.webpackChunkchess3d||[]).push([[199],{626:(o,e,t)=>{t.r(e),t.d(e,{default:()=>G});var n=t(950),s=t(93),c=t(338),a=t(792),i=t(728),l=t(274),r=t(61),d=t(94),h=t(437);const p=o=>{console.log("[logModelDetails] Starting to log model details"),o instanceof h.Object3D?(console.log("[logModelDetails] Object3D details:\n Type: Object3D\n Children: ".concat(o.children.length,"\n Meshes: ").concat(o.children.filter((o=>o instanceof h.Mesh)).length,"\n Materials: ").concat(new Set(o.children.filter((o=>o instanceof h.Mesh)).map((o=>o.material))).size)),o.children.forEach(((o,e)=>{console.log("[logModelDetails] Child ".concat(e,": ").concat(o.type))}))):o instanceof h.BufferGeometry&&console.log("[logModelDetails] BufferGeometry details:\n Type: BufferGeometry\n Vertices: ".concat(o.attributes.position.count,"\n        - Type: BufferGeometry\n        - Vertices: ").concat(o.attributes.position.count,"\n        - Faces: ").concat(o.index?o.index.count/3:"N/A","\n        - Attributes: ").concat(Object.keys(o.attributes).join(", "))),console.log("[logModelDetails] Finished logging model details")};var g=t(243),m=t(673),u=t(414);const f={pawn:"".concat(g.o,"/assets/pawn.stl"),bishop:"".concat(g.o,"/assets/bishop.stl"),king:"".concat(g.o,"/assets/king.stl"),knight:"".concat(g.o,"/assets/knight.stl"),queen:"".concat(g.o,"/assets/queen.stl"),rook:"".concat(g.o,"/assets/rook.stl")},y=o=>{let{position:e,type:t,color:s,onClick:c,isSelected:a,isAnimating:i,targetPosition:l}=o;const[g,y]=(0,n.useState)(null),[C,b]=(0,n.useState)(null);console.log("ChessPiece render - Type: ".concat(t,", Color: ").concat(s,", Position: ").concat(e,", IsSelected: ").concat(a,", IsAnimating: ").concat(i,", TargetPosition: ").concat(l));const{position:v}=(0,m.zh)({position:i&&l?l:e,config:{mass:1,tension:180,friction:12}});return console.log("Animated position: ".concat(JSON.stringify(v))),t?((0,n.useEffect)((()=>{var o;console.log("ChessPiece useEffect - Loading model for type: ".concat(t)),(o=f[t],console.log("[loadModel] Starting to load model from path: ".concat(o)),new Promise(((e,t)=>{let n;console.log("[loadModel] Determining loader type for file: ".concat(o)),o.endsWith(".stl")?(console.log("[loadModel] Detected STL file, using STLLoader"),n=new d.t):(console.log("[loadModel] Using GLTFLoader for non-STL file (assumed GLTF/GLB)"),n=new r.B),console.log("[loadModel] Initiating model loading process for: ".concat(o)),n.load(o,(t=>{if(console.log("[loadModel] Model loaded successfully from path: ".concat(o)),o.endsWith(".stl")){console.log("[loadModel] Processing STL model"),console.log("[loadModel] Creating MeshStandardMaterial for STL");const o=new h.MeshStandardMaterial({color:13421772});console.log("[loadModel] Creating Mesh from BufferGeometry and Material");const n=new h.Mesh(t,o);p(t),console.log("[loadModel] Resolving with created Mesh"),e(n)}else{var n,s;console.log("[loadModel] Processing GLTF model"),console.log("[loadModel] GLTF content summary:"),console.log("- Animations: ".concat(t.animations.length)),console.log("- Cameras: ".concat(t.cameras.length)),console.log("- Asset Generator: ".concat(null===(n=t.asset)||void 0===n?void 0:n.generator)),console.log("- Asset Version: ".concat(null===(s=t.asset)||void 0===s?void 0:s.version)),p(t.scene),console.log("[loadModel] Resolving with GLTF scene"),e(t.scene)}}),(o=>{const e=(o.loaded/o.total*100).toFixed(2);console.log("[loadModel] Loading progress: ".concat(e,"% (").concat(o.loaded," / ").concat(o.total," bytes)"))}),(e=>{console.error("[loadModel] Error loading model from path: ".concat(o),e),console.error("[loadModel] Error details:",e.message),t(e)})),console.log("[loadModel] Load request initiated for: ".concat(o))}))).then((o=>{console.log("ChessPiece: Model loaded successfully for type: ".concat(t));const e=(new h.Box3).setFromObject(o),n=new h.Vector3;e.getSize(n);const c=Math.max(n.x,n.y,n.z);console.log("ChessPiece: Bounding box size: (".concat(n.x.toFixed(2),", ").concat(n.y.toFixed(2),", ").concat(n.z.toFixed(2),")")),console.log("ChessPiece: Max dimension: ".concat(c.toFixed(2))),o.rotation.x=-Math.PI/2,console.log("ChessPiece: Model rotated to stand upright"),e.setFromObject(o);const i=1/c,l="pawn"===t?.65*i:i;o.scale.set(l,l,l),console.log("ChessPiece: Model scaled to: ".concat(l.toFixed(4))),e.setFromObject(o);const r=new h.Vector3;e.getCenter(r),o.position.set(-r.x,-.4,-r.z),console.log("ChessPiece: Model centered at: (".concat(r.x.toFixed(2),", ").concat(r.y.toFixed(2),", ").concat(r.z.toFixed(2),")")),e.setFromObject(o);const d=new h.MeshPhysicalMaterial({color:a?"#ffd700":"white"===s?"#e6d0b1":"#b48764",metalness:.5,roughness:.5,clearcoat:1,envMapIntensity:.8,emissive:a?"#ffd700":"#000000",emissiveIntensity:a?.2:0});console.log("ChessPiece: Material created - Color: ".concat(d.color.getHexString(),", Metalness: ").concat(d.metalness,", Roughness: ").concat(d.roughness)),o.traverse((o=>{o instanceof h.Mesh&&(o.material=d,console.log("ChessPiece: Applied material to child mesh: ".concat(o.name||"unnamed")))})),y(o),console.log("ChessPiece: Model set successfully for type: ".concat(t))})).catch((o=>{console.error("ChessPiece Error: Failed to load model for type: ".concat(t),o),b(o)}))}),[t,s,a]),C?(console.warn("ChessPiece: Rendering fallback for type: ".concat(t," due to error")),(0,u.jsxs)("mesh",{position:e,onClick:c,children:[(0,u.jsx)("boxGeometry",{args:[1,1,1]}),(0,u.jsx)("meshStandardMaterial",{color:"red"})]})):g?(console.log("ChessPiece: Rendering model for type: ".concat(t)),(0,u.jsx)(m.CS.mesh,{position:v,onClick:c,children:(0,u.jsx)("primitive",{object:g})})):(console.log("ChessPiece: Rendering placeholder for type: ".concat(t)),(0,u.jsxs)("mesh",{position:e,onClick:c,children:[(0,u.jsx)("boxGeometry",{args:[1,1,1]}),(0,u.jsx)("meshStandardMaterial",{color:"gray"})]}))):(console.error("ChessPiece Error: Component requires a type prop"),null)};var C=t(572);(0,a.e)({OrbitControls:i.N}),(0,a.e)({Text:l.E});const b=.5,v=(o,e)=>!(Math.abs(o[0]-e[0])>b)&&(!(Math.abs(o[1]-e[1])>b)&&!(Math.abs(o[2]-e[2])>b)),w=(o,e,t)=>{const n=[];for(let s=0;s<8;s++)for(let c=0;c<8;c++){const a=(s+c)%2===0?"white":"black",i=e.some((o=>o[0]===s&&o[1]===c)),l=o&&o.position[0]===s&&o.position[2]===c?"#ffd700":i?"#90EE90":"white"===a?"#e6d0b1":"#b48764";n.push((0,u.jsxs)("mesh",{position:[s,0,c],onClick:()=>t(s,c),children:[(0,u.jsx)("boxGeometry",{args:[1,.1,1]}),(0,u.jsx)("meshPhysicalMaterial",{color:l,metalness:.1,roughness:.8,clearcoat:1,clearcoatRoughness:.1,envMapIntensity:.5})]},"".concat(s,"-").concat(c)))}return n},M=[{type:"rook",position:[0,.5,0],color:"white"},{type:"knight",position:[1,.5,0],color:"white"},{type:"bishop",position:[2,.5,0],color:"white"},{type:"queen",position:[3,.5,0],color:"white"},{type:"king",position:[4,.5,0],color:"white"},{type:"bishop",position:[5,.5,0],color:"white"},{type:"knight",position:[6,.5,0],color:"white"},{type:"rook",position:[7,.5,0],color:"white"},{type:"pawn",position:[0,.5,1],color:"white"},{type:"pawn",position:[1,.5,1],color:"white"},{type:"pawn",position:[2,.5,1],color:"white"},{type:"pawn",position:[3,.5,1],color:"white"},{type:"pawn",position:[4,.5,1],color:"white"},{type:"pawn",position:[5,.5,1],color:"white"},{type:"pawn",position:[6,.5,1],color:"white"},{type:"pawn",position:[7,.5,1],color:"white"},{type:"rook",position:[0,.5,7],color:"black"},{type:"knight",position:[1,.5,7],color:"black"},{type:"bishop",position:[2,.5,7],color:"black"},{type:"queen",position:[3,.5,7],color:"black"},{type:"king",position:[4,.5,7],color:"black"},{type:"bishop",position:[5,.5,7],color:"black"},{type:"knight",position:[6,.5,7],color:"black"},{type:"rook",position:[7,.5,7],color:"black"},{type:"pawn",position:[0,.5,6],color:"black"},{type:"pawn",position:[1,.5,6],color:"black"},{type:"pawn",position:[2,.5,6],color:"black"},{type:"pawn",position:[3,.5,6],color:"black"},{type:"pawn",position:[4,.5,6],color:"black"},{type:"pawn",position:[5,.5,6],color:"black"},{type:"pawn",position:[6,.5,6],color:"black"},{type:"pawn",position:[7,.5,6],color:"black"}],x=()=>{const{camera:o,gl:e}=(0,a.A)();console.log("Initializing OrbitControls");const t=n.useMemo((()=>new i.N(o,e.domElement)),[o,e]);return(0,n.useEffect)((()=>{t.minDistance=5,t.maxDistance=20;const o=o=>{o.preventDefault(),t.zoom+=3e-4*o.deltaY,console.log("Zoom level changed: ".concat(t.zoom0))};return e.domElement.addEventListener("wheel",o,{passive:!1}),()=>{t.dispose(),e.domElement.removeEventListener("wheel",o)}}),[o,e,t]),null},k=(0,n.forwardRef)(((o,e)=>{let{currentTurn:t,switchTurn:s,onPieceCapture:c,resetGame:a,onBoardStateChange:i,moveHistory:r}=o;console.log("Rendering ChessBoard component",{currentTurn:t,switchTurn:s,onPieceCapture:c,resetGame:a,onBoardStateChange:i,moveHistory:r});const d=()=>(0,C.Ke)(L),h=o=>{if((0,C.F1)(o)){const e=(0,C.nc)(o);A(e),j(null),G([]),T(E+1),i(e)}else console.error("Invalid ASCII art format")};(0,n.useEffect)((()=>{g.O&&console.log("ChessBoard mounted. Props:",{currentTurn:t,switchTurn:s,onPieceCapture:c,resetGame:a,onBoardStateChange:i,moveHistory:r})}),[]);const[p,m]=(0,n.useState)(null),[f,k]=(0,n.useState)(!1),[S,j]=(0,n.useState)(null),[P,G]=(0,n.useState)([]),[E,T]=(0,n.useState)(0),[L,A]=(0,n.useState)(M),F=o=>{o.color===t&&(j(o),G(((o,e)=>{let t=[];const[n,,s]=o.position,c=(o,e)=>o>=0&&o<8&&e>=0&&e<8,a=(o,t)=>e.some((e=>v(e.position,[o,b,t]))),i=(t,n)=>e.some((e=>e.color!==o.color&&v(e.position,[t,b,n]))),l=(o,e)=>{!c(o,e)||a(o,e)&&!i(o,e)||t.push([o,e])},r=(o,e)=>{for(let t=1;t<8;t++){const r=n+t*o,d=s+t*e;if(!c(r,d))break;if(a(r,d)){i(r,d)&&l(r,d);break}l(r,d)}};switch(o.type){case"pawn":const e="white"===o.color?1:-1,t="white"===o.color?1:6;a(n,s+e)||(l(n,s+e),s!==t||a(n,s+2*e)||l(n,s+2*e)),i(n-1,s+e)&&l(n-1,s+e),i(n+1,s+e)&&l(n+1,s+e);break;case"rook":r(1,0),r(-1,0),r(0,1),r(0,-1);break;case"knight":[[2,1],[2,-1],[-2,1],[-2,-1],[1,2],[1,-2],[-1,2],[-1,-2]].forEach((o=>{let[e,t]=o;l(n+e,s+t)}));break;case"bishop":r(1,1),r(-1,-1),r(1,-1),r(-1,1);break;case"queen":r(1,0),r(-1,0),r(0,1),r(0,-1),r(1,1),r(-1,-1),r(1,-1),r(-1,1);break;case"king":[[1,0],[-1,0],[0,1],[0,-1],[1,1],[-1,-1],[1,-1],[-1,1]].forEach((o=>{let[e,t]=o;l(n+e,s+t)}))}return t})(o,L)),T((o=>o+1)))};return n.useImperativeHandle(e,(()=>({getBoardStateAsAscii:d,setBoardStateFromAscii:h}))),(0,u.jsxs)("group",{children:[(0,u.jsx)(x,{}),(0,u.jsx)("group",{children:w(S,P,((o,e)=>{if(S){if(!P.some((t=>v(t,[o,e]))))return;const t=L.find((t=>v(t.position,[o,b,e])&&t.color!==S.color))||null;m({...S,targetPosition:[o,b,e]}),setTimeout((()=>{const n=L.map((n=>v(n.position,S.position)?{...n,position:[o,b,e]}:t&&v(n.position,t.position)?null:n)).filter(Boolean);A(n),j(null),G([]),T((o=>o+1)),s(),m(null),i&&i(n),r.addMove({piece:S,from:S.position,to:[o,b,e],capturedPiece:t})}),500),t&&(c(t),t&&"king"===t.type&&k(!0))}}))},E),L.map(((o,e)=>(0,u.jsx)(n.Fragment,{children:(0,u.jsx)(y,{type:o.type,position:o.position,color:o.color,onClick:()=>F(o),isSelected:S===o,isAnimating:p&&v(p.position,o.position),targetPosition:p&&v(p.position,o.position)?p.targetPosition:null},e)},e))),(0,u.jsx)(l.E,{position:[4,5,4],fontSize:1,color:"white",anchorX:"center",anchorY:"middle",children:f?"GAME OVER - ".concat("white"===t?"BLACK":"WHITE"," WINS!"):""}),f&&(0,u.jsx)(l.E,{position:[4,4,4],fontSize:.5,color:"white",anchorX:"center",anchorY:"middle",onClick:()=>{A(M),j(null),G([]),k(!1),a(),T((o=>o+1))},children:"Click here to reset the game"}),(0,u.jsx)("pointLight",{position:[4,10,4],intensity:1.5,color:"#ffffff"}),(0,u.jsx)("ambientLight",{intensity:.5})]})})),S=o=>{let{capturedPieces:e}=o;const t=(0,n.useCallback)(((o,e)=>{console.group("".concat(e," captured pieces (").concat(o.length,")")),o.forEach(((o,e)=>{console.log("".concat(e+1,". ").concat(o.color," ").concat(o.type))})),console.groupEnd()}),[]),s=(0,n.useMemo)((()=>e.filter((o=>"white"===o.color))),[e]),c=(0,n.useMemo)((()=>e.filter((o=>"black"===o.color))),[e]);(0,n.useEffect)((()=>{console.group("Captured pieces updated"),console.log("Total captured pieces:",e.length),console.log("White captured pieces:",s.length),console.log("Black captured pieces:",c.length),t(s,"White"),t(c,"Black"),console.groupEnd()}),[e,s,c,t]);const a=(0,n.useCallback)(((o,e)=>(0,u.jsx)("group",{position:"white"===e?[0,-1.5,0]:[7,-1.5,7],children:o.map(((o,t)=>{const n=["white"===e?t%4*.75:-t%4*.75,.75*Math.floor(t/4),"white"===e?0:.75*-Math.floor(t/4)];return console.log("Rendering ".concat(o.color," ").concat(o.type," at position:"),n),(0,u.jsx)(y,{type:o.type,color:o.color,position:n,scale:[.3,.3,.3],onClick:()=>{console.log("Clicked on captured ".concat(o.color," ").concat(o.type," at index ").concat(t),{position:n,scale:[.3,.3,.3]})},isSelected:!1},t)}))})),[]);return(0,n.useEffect)((()=>(console.log("PieceGraveyard rendered",{whiteCapturedPieces:s.length,blackCapturedPieces:c.length}),()=>{console.log("PieceGraveyard unmounted")})),[s,c]),(0,u.jsxs)("group",{children:[a(s,"white"),a(c,"black")]})};class j{constructor(){this.moves=[],this.className="MoveHistory",console.log("".concat(this.className," initialized"))}addMove(o){this.moves.push(o),console.info("".concat(this.className,": Move added - ").concat(this.formatMove(o))),console.debug("".concat(this.className,": Current move count: ").concat(this.moves.length))}undoLastMove(){const o=this.moves.pop();return o?(console.info("".concat(this.className,": Last move undone - ").concat(this.formatMove(o))),console.debug("".concat(this.className,": Current move count: ").concat(this.moves.length))):console.warn("".concat(this.className,": Attempted to undo move, but no moves in history")),o}getMoveHistory(){return console.debug("".concat(this.className,": Retrieving move history. Total moves: ").concat(this.moves.length)),[...this.moves]}clear(){const o=this.moves.length;this.moves=[],console.info("".concat(this.className,": Move history cleared. Previous move count: ").concat(o))}getLastMove(){const o=this.moves[this.moves.length-1];return o?console.debug("".concat(this.className,": Retrieved last move - ").concat(this.formatMove(o))):console.debug("".concat(this.className,": No last move available")),o}getMoveCount(){return console.debug("".concat(this.className,": Current move count: ").concat(this.moves.length)),this.moves.length}toAscii(){const o=this.moves.map(((o,e)=>{const t="".concat(String.fromCharCode(97+o.from[0])).concat(o.from[2]+1),n="".concat(String.fromCharCode(97+o.to[0])).concat(o.to[2]+1);return"".concat(e+1,". ").concat(o.piece.color," ").concat(o.piece.type," ").concat(t,"-").concat(n).concat(o.capturedPiece?" x":"")})).join("\n");return console.debug("".concat(this.className,": ASCII representation of move history generated")),console.log("".concat(this.className,": ASCII representation:\n").concat(o)),o}formatMove(o){const e="".concat(String.fromCharCode(97+o.from[0])).concat(o.from[2]+1),t="".concat(String.fromCharCode(97+o.to[0])).concat(o.to[2]+1),n=o.capturedPiece?" x ".concat(o.capturedPiece.type):"";return"".concat(o.piece.color," ").concat(o.piece.type," ").concat(e,"-").concat(t).concat(n)}}var P=t(930);const G=o=>{let{openUtilityMenu:e,onError:t,basePath:a}=o;console.log("[ChessGame] Rendering component");const[i,l]=(0,n.useState)(null),[r,d]=(0,n.useState)(!0),[h,p]=(0,n.useState)([]),[g,m]=(0,n.useState)(0),[f,y]=(0,n.useState)([]),[C,b]=(0,n.useState)("white"),v=(0,n.useRef)(new j);(0,n.useEffect)((()=>(console.log("[ChessGame] Component mounted"),d(!1),()=>{console.log("[ChessGame] Component unmounted")})),[]),(0,n.useEffect)((()=>{i&&(console.error("[ChessGame] Error occurred:",i),t(i))}),[i,t]),(0,n.useEffect)((()=>{console.log("[ChessGame] basePath:",a)}),[a]);if(r)return console.log("[ChessGame] Still loading..."),(0,u.jsx)("div",{children:"Loading ChessGame..."});if(i)return console.error("[ChessGame] Rendering error state:",i.message),(0,u.jsxs)("div",{children:["Error: ",i.message]});const w=()=>{console.log("[ChessGame] Resetting game state"),p([]),b("white"),m((o=>o+1)),v.current.clear()};return console.log("[ChessGame] About to render Canvas"),(0,u.jsxs)("div",{className:"chess-container",style:{display:"flex",flexDirection:"column",alignItems:"center"},children:[(0,u.jsxs)("div",{className:"turn-indicator",children:["Current Turn: ",(0,u.jsx)("span",{style:{color:"white"===C?"#e6d0b1":"#b48764"},children:C})]}),(0,u.jsx)(P.A,{onError:o=>console.error("[ChessGame] ErrorBoundary caught an error:",o),children:(0,u.jsx)(s.Hl,{style:{width:"90vw",height:"90vh"},camera:{position:[4,10,14],fov:50},onCreated:o=>{let{gl:e}=o;console.log("[ChessGame] Canvas created"),e.setClearColor("#34495e")},onError:o=>{console.error("[ChessGame] Canvas error:",o),l(new Error("Canvas error: "+o.message))},children:(0,u.jsxs)(n.Suspense,{fallback:(0,u.jsxs)("mesh",{children:[(0,u.jsx)("boxGeometry",{args:[1,1,1]}),(0,u.jsx)("meshStandardMaterial",{color:"gray"})]}),children:[(0,u.jsx)("ambientLight",{intensity:.5}),(0,u.jsx)("pointLight",{position:[10,10,10],intensity:1.5}),(0,u.jsx)("fog",{attach:"fog",args:["#34495e",0,40]}),(0,u.jsx)("color",{attach:"background",args:["#34495e"]}),(0,u.jsxs)("group",{children:[(0,u.jsx)(k,{basePath:a,onPieceCapture:o=>{console.log("[ChessGame] Piece captured:",o),p((e=>{const t=[...e,o];return console.log("[ChessGame] Updated captured pieces:",t),t}))},currentTurn:C,switchTurn:()=>{console.log("[ChessGame] Switching turn"),b("white"===C?"black":"white")},resetGame:w,onBoardStateChange:o=>{console.log("[ChessGame] Board state changed:",o),y(o)},moveHistory:v.current}),(0,u.jsx)(S,{capturedPieces:h}),(0,u.jsx)(c.N,{target:[4,0,4],enablePan:!1,minPolarAngle:Math.PI/6,maxPolarAngle:Math.PI/2,minDistance:8,maxDistance:20,enableDamping:!0,dampingFactor:.05})]},g)]})})})]})}}}]);